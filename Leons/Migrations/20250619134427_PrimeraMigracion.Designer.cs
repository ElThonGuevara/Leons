// <auto-generated />
using System;
using Leons.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Leons.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250619134427_PrimeraMigracion")]
    partial class PrimeraMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Leons.Models.Carrito", b =>
                {
                    b.Property<int>("idCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCarrito"));

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("idCarrito");

                    b.HasIndex("idUsuario");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("Leons.Models.Categoria", b =>
                {
                    b.Property<int>("idCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCategoria"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Leons.Models.DetalleCarrito", b =>
                {
                    b.Property<int>("idDetalleCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDetalleCarrito"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("idCarrito")
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.HasKey("idDetalleCarrito");

                    b.HasIndex("idCarrito");

                    b.HasIndex("idProducto");

                    b.ToTable("DetalleCarritos");
                });

            modelBuilder.Entity("Leons.Models.DetallePedido", b =>
                {
                    b.Property<int>("idDetallePedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDetallePedido"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("idPedido")
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("precioUnitario")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("idDetallePedido");

                    b.HasIndex("idPedido");

                    b.HasIndex("idProducto");

                    b.ToTable("DetallePedidos");
                });

            modelBuilder.Entity("Leons.Models.Pedido", b =>
                {
                    b.Property<int>("idPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPedido"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("fechaPedido")
                        .HasColumnType("date");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("idPedido");

                    b.HasIndex("idUsuario");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Leons.Models.Producto", b =>
                {
                    b.Property<int>("idProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProducto"));

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCategoria")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precio")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.Property<string>("talla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idProducto");

                    b.HasIndex("idCategoria");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Leons.Models.Rol", b =>
                {
                    b.Property<int>("idRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRol"));

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Leons.Models.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuario"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idRol")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idUsuario");

                    b.HasIndex("idRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Leons.Models.Carrito", b =>
                {
                    b.HasOne("Leons.Models.Usuario", "usuario")
                        .WithMany("Carritos")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Leons.Models.DetalleCarrito", b =>
                {
                    b.HasOne("Leons.Models.Carrito", "carrito")
                        .WithMany("detalleCarrito")
                        .HasForeignKey("idCarrito")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Leons.Models.Producto", "Producto")
                        .WithMany("detalleCarrito")
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("carrito");
                });

            modelBuilder.Entity("Leons.Models.DetallePedido", b =>
                {
                    b.HasOne("Leons.Models.Pedido", "pedido")
                        .WithMany("detallePedidos")
                        .HasForeignKey("idPedido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Leons.Models.Producto", "Producto")
                        .WithMany("detallePedidos")
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("pedido");
                });

            modelBuilder.Entity("Leons.Models.Pedido", b =>
                {
                    b.HasOne("Leons.Models.Usuario", "usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Leons.Models.Producto", b =>
                {
                    b.HasOne("Leons.Models.Categoria", "categoria")
                        .WithMany("productos")
                        .HasForeignKey("idCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("Leons.Models.Usuario", b =>
                {
                    b.HasOne("Leons.Models.Rol", "rol")
                        .WithMany("usuarios")
                        .HasForeignKey("idRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("rol");
                });

            modelBuilder.Entity("Leons.Models.Carrito", b =>
                {
                    b.Navigation("detalleCarrito");
                });

            modelBuilder.Entity("Leons.Models.Categoria", b =>
                {
                    b.Navigation("productos");
                });

            modelBuilder.Entity("Leons.Models.Pedido", b =>
                {
                    b.Navigation("detallePedidos");
                });

            modelBuilder.Entity("Leons.Models.Producto", b =>
                {
                    b.Navigation("detalleCarrito");

                    b.Navigation("detallePedidos");
                });

            modelBuilder.Entity("Leons.Models.Rol", b =>
                {
                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("Leons.Models.Usuario", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
